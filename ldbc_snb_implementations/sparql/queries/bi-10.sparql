PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>
PREFIX xsd: <http://www.w3.org/2001/XMLSchema#>
PREFIX sn: <http://www.ldbc.eu/ldbc_socialnet/1.0/data/>
PREFIX snvoc: <http://www.ldbc.eu/ldbc_socialnet/1.0/vocabulary/>
PREFIX sntag: <http://www.ldbc.eu/ldbc_socialnet/1.0/tag/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>
PREFIX dbpedia: <http://dbpedia.org/resource/>
PREFIX dbpedia-owl: <http://dbpedia.org/ontology/>

SELECT ?personId (?interestScore + ?messageScore AS ?score) (SUM( ?friendInterestScore + ?friendMessageScore) AS ?friendsScore)
WHERE
{
    {
        SELECT ?personId (MAX(COALESCE(?innerInterestScore,0)) AS ?interestScore) (COALESCE(COUNT(?message),0)  AS ?messageScore)
        WHERE
        {
            VALUES (?type) {(snvoc:Comment) (snvoc:Post)}
            ?personId a snvoc:Person .
            {
                ?message a ?type .
                ?message snvoc:hasCreator ?personId .
                ?message snvoc:hasTag ?tag .
                ?tag foaf:name $tag .
                ?message snvoc:creationDate ?creationDate .
                FILTER (?creationDate > $date)
            }
            UNION
            {
                ?personId snvoc:hasInterest/foaf:name $tag
                BIND(100 AS ?innerInterestScore)
            }
        }
        GROUP BY ?personId
    }
    OPTIONAL {
        {
            SELECT ?friend (MAX(COALESCE(?friendInnerInterestScore,0)) AS ?friendInterestScore) (COALESCE(COUNT(?message),0) AS ?friendMessageScore)
            WHERE
            {
                VALUES (?type) {(snvoc:Comment) (snvoc:Post)}
                ?friend a snvoc:Person .
                {
                    ?message a ?type .
                    ?message snvoc:hasCreator ?friend .
                    ?message snvoc:hasTag ?tag .
                    ?tag foaf:name $tag .
                    ?message snvoc:creationDate ?creationDate .
                    FILTER (?creationDate > $date)
                }
                UNION
                {
                    ?friend snvoc:hasInterest/foaf:name $tag
                    BIND(100 AS ?friendInnerInterestScore)
                }
            }
            GROUP BY ?friend
        }
        {
            ?friend snvoc:knows/snvoc:hasPerson ?personId
        }
        UNION
        {
            ?personId snvoc:knows/snvoc:hasPerson ?friend
        }
    }
}
GROUP BY ?personId ?interestScore ?messageScore ?friendsScore
ORDER BY DESC(?score + ?friendsScore) ?personId
LIMIT 100
