PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>
PREFIX xsd: <http://www.w3.org/2001/XMLSchema#>
PREFIX sn: <http://www.ldbc.eu/ldbc_socialnet/1.0/data/>
PREFIX snvoc: <http://www.ldbc.eu/ldbc_socialnet/1.0/vocabulary/>
PREFIX sntag: <http://www.ldbc.eu/ldbc_socialnet/1.0/tag/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>
PREFIX dbpedia: <http://dbpedia.org/resource/>
PREFIX dbpedia-owl: <http://dbpedia.org/ontology/>

SELECT ?personId ?likeCount ?messageCount ?replyCount ?score
WHERE
{
    {
        SELECT ?personId (COUNT(DISTINCT ?like) AS ?likeCount) (COUNT(DISTINCT ?message) AS ?messageCount) (COUNT(DISTINCT ?replyComment) AS ?replyCount)
        WHERE
        {
            VALUES (?type) {(snvoc:Comment) (snvoc:Post)}
            ?message a ?type .
            ?message snvoc:hasTag ?tag .
            ?tag a ?tagClass .
            ?tagClass a snvoc:TagClass .
            ?tag foaf:name $tag .
            OPTIONAL {
                ?personWhoLiked a snvoc:Person .
                ?personWhoLiked snvoc:likes ?like .
                ?like snvoc:hasComment|snvoc:hasPost ?message .
            }
            ?personId a snvoc:Person .
            ?message snvoc:hasCreator ?personId .
            OPTIONAL {
                ?replyComment snvoc:replyOf ?message.
            }
        }
        GROUP BY ?personId
    }
    BIND( ?messageCount + 2 * ?replyCount + 10 * ?likeCount as ?score)
}
ORDER BY DESC(?score) ?personId
LIMIT 100
