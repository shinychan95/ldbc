Completion time is the point in time behind which (and including) there are no uncompleted events.
It is not possible that there are uncompleted events at that time.
Approximately --> Completion Time = min( min(Initiated Events), max(Completed Events) )
But not exactly, as Completion Time is ALWAYS lower than min(Initiated Events).

TODO
Definitions:
	- lastKnownLowestIT: ...
	- etc.
TODO
Rules:
	- GCT.lastKnownLowestIT = LCT.lastKn...
	- update as soon as possible (i.e., rationale for lastLowestIT) because... <-- explain why min(LCT) would be correct, but overly conservate. explain lastLowest.. as an optimization/addition
	- why LCT/GCT need to be updated both when LiT and LcT are submitted
TODO
Assumptions:
	- monotonic increasing, etc. --> NOTE, initiated times MUST be applied in ascending order!

*****************************************************************************
************************************ LCT ************************************
*****************************************************************************

class LCTProvider {
	Time LCT = ???
	Time lastLowestIT = ???
	Time[] IT = []
	Time[] CT = []

	void submitLiT(Time dueTime) {
		IT.add(dueTime)
		lastLowestIT = min(IT)
		updateLCT()
	}

	void submitLcT(Time dueTime) {
		IT.remove(dueTime)
		lastLowestIT = min(IT)
		CT.add(dueTime)
		updateLCT()
	}

	void updateLCT() {
		Time highestRemovedCT = removeTimesLowerThanAndReturnHighestRemoved(lastLowestIT, CT)
		if (??? != highestRemovedCT) LCT = highestRemovedCT
	}
}


*****************************************************************************
************************************ GCT ************************************
*****************************************************************************

class GCTProvider {
	LCTProvider[] lctProviders = // initialized on startup
	Time GCT = ???
	Time lastLowestIT = ???

	void submitLiT(int lctProviderId, Time dueTime) {
		LCTProvider lctProvider = lctProviders[lctProviderId]
		lctProvider.submitLiT(dueTime)
		updateGCT()
	}

	void submitLcT(int lctProviderId, Time dueTime) {
		LCTProvider lctProvider = lctProviders[lctProviderId]
		lctProvider.submitLcT(dueTime)
		updateGCT()
	}

	void updateGCT() {
		Time minLastLowestIT = minLastLowestIT(lctProviders)
		if (??? == minLastLowestIT) return
		lastLowestIT = minLastLowestIT
		LCTProvider[] filteredLctProviders = withLctBelow(lctProviders, lastLowestIT)
		Time maxLCT = maxLCT(filteredLctProviders)
		if (??? == maxLCT) return
		GCT = maxLCT
	}
}
